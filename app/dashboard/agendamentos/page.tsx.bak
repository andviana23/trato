"use client";

import { useAuth } from '@/lib/contexts/AuthContext';
import { useRouter } from 'next/navigation';
import { useEffect, useMemo, useState } from 'react';
import { Button } from "@nextui-org/react";
import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';
import DashboardLayout from '@/components/layout/DashboardLayout';
import dayjs from 'dayjs';
import DailyScheduler from '@/app/agendamento/components/DailyScheduler';
import { Evento, Profissional } from '@/app/agendamento/types';

type ViewMode = 'semanal' | 'diario';

export default function AgendamentosPage() {
  const { user, loading } = useAuth();
  const router = useRouter();
  const [data, setData] = useState(dayjs().format('YYYY-MM-DD'));

  useEffect(() => {
    if (!loading && !user) router.push('/auth/login');
  }, [user, loading, router]);

  // Mocks na rota antiga para já exibir a nova UI
  const profissionais: Profissional[] = [
    { id: 'p1', nome: 'Andrey' },
    { id: 'p2', nome: 'Lala' },
    { id: 'p3', nome: 'Pedro Lucas' },
  ];
  const agendamentos: Evento[] = [
    { id: '1', proId: 'p1', titulo: 'João — Corte + Barba', inicio: `${data}T07:00:00`, fim: `${data}T08:00:00`, tipo: 'agendado' },
    { id: '2', proId: 'p2', titulo: 'Bloqueio — Reunião', inicio: `${data}T07:00:00`, fim: `${data}T10:30:00`, tipo: 'bloqueio' },
    { id: '3', proId: 'p3', titulo: 'Modelagem + Corte + Barba', inicio: `${data}T07:00:00`, fim: `${data}T09:30:00`, tipo: 'agendado' },
  ];

  const daysOfWeek = useMemo(() => {
    const start = baseDate.startOf('week');
    return new Array(7).fill(0).map((_, i) => start.add(i, 'day'));
  }, [baseDate]);

  if (loading || !user) return null;

  return (
    <DashboardLayout>
      {/* Header simplificado */}
      <div className="flex items-center justify-between mb-2 mt-2">
        <div className="flex items-center gap-2">
          <Button isIconOnly variant="flat" onPress={() => setData(dayjs(data).add(-1,'day').format('YYYY-MM-DD'))}><ChevronLeftIcon className="w-5 h-5"/></Button>
          <div className="text-lg font-medium text-gray-700">{dayjs(data).format('MMMM YYYY')}</div>
          <Button isIconOnly variant="flat" onPress={() => setData(dayjs(data).add(1,'day').format('YYYY-MM-DD'))}><ChevronRightIcon className="w-5 h-5"/></Button>
        </div>
        <div />
      </div>
      <div className="p-2 md:p-4">
        <DailyScheduler data={data} profissionais={profissionais} eventos={agendamentos} />
      </div>
    </DashboardLayout>
  );
}
